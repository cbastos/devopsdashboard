import { Container } from 'inversify';
import { Api } from './api';
import RedisCache from './adapters/redisCacheClient';
import Cache from './adapters/cache';
import Repository from './adapters/repository/repository';
import EndPointsConfigurator from './endPointsConfigurator';
import Employees from './domain/Employees';
import TYPES from './container.types';
import Projects from './domain/Projects';
import Work from './domain/Work';
import GitlabAgent from './adapters/gitlabAgent';
import CodeQualityAgent from './domain/ports/codeQualityAgent';
import SonarQubeAgent from './adapters/SonarQubeAgent';
import HttpClient from './adapters/httpClient';
import FetchHttpClient from './adapters/fetchHttpClient';
import JiraAgent from './adapters/jiraAgent';
import CommitsRetriever from './domain/ports/commitsRetriever';
import PipelinesRetriever from './domain/ports/pipelinesRetriever';
import ProjectsRetriever from './domain/ports/projectsRetriever';
import EmployeeEventsRetriever from './domain/ports/employeeEventsRetriever';
import BacklogRetriever from './domain/ports/backlogRetriever';
import express from 'express';
import promBundle from 'express-prom-bundle';
import TrazedCache from './adapters/trazedCache';
import TrazedHttpClient from './adapters/trazedHttpClient';
import DeploymentsAgent from './domain/ports/deploymentsAgent';
import XLDeployAgent from './adapters/XLDeployAgent';

export const container = new Container();
container.bind(TYPES.EndPointsConfigurator).to(EndPointsConfigurator);
container.bind(TYPES.Repository).to(Repository).inSingletonScope();
container.bind(TYPES.Employees).to(Employees);
container.bind(TYPES.Projects).to(Projects);
container.bind(TYPES.Work).to(Work);
container.bind<DeploymentsAgent>(TYPES.DeploymentsAgent).to(XLDeployAgent);
container.bind<CommitsRetriever>(TYPES.CommitsRetriever).to(GitlabAgent);
container.bind<EmployeeEventsRetriever>(TYPES.EmployeeEventsRetriever).to(GitlabAgent);
container.bind<PipelinesRetriever>(TYPES.PipelinesRetriever).to(GitlabAgent);
container.bind<ProjectsRetriever>(TYPES.ProjectsRetriever).to(GitlabAgent);
container.bind<CodeQualityAgent>(TYPES.CodeQualityAgent).to(SonarQubeAgent);
container.bind<Cache>(TYPES.Cache).toDynamicValue(() => new TrazedCache(new RedisCache()));
container.bind<HttpClient>(TYPES.HttpClient).toDynamicValue(() => new TrazedHttpClient(new FetchHttpClient()));
container.bind<BacklogRetriever>(TYPES.BacklogRetriever).to(JiraAgent);
container.bind(TYPES.Express).toFunction(express);
container.bind(TYPES.PromBundle).toFunction(promBundle);

container.bind(TYPES.Api).to(Api);